rahul@rahul-HP-EliteBook-840-G2:~$ pat-get install git
Command 'pat-get' not found, did you mean:
  command 'apt-get' from deb apt (2.4.5)
Try: sudo apt install <deb name>
rahul@rahul-HP-EliteBook-840-G2:~$ apt-get install git
E: Could not open lock file /var/lib/dpkg/lock-frontend - open (13: Permission denied)
E: Unable to acquire the dpkg frontend lock (/var/lib/dpkg/lock-frontend), are you root?
rahul@rahul-HP-EliteBook-840-G2:~$ sudo apt-get install git
[sudo] password for rahul: 
Sorry, try again.
[sudo] password for rahul: 
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
The following packages were automatically installed and are no longer required:
  chromium-codecs-ffmpeg-extra gstreamer1.0-vaapi libva-wayland2
Use 'sudo apt autoremove' to remove them.
The following additional packages will be installed:
  git-man liberror-perl
Suggested packages:
  git-daemon-run | git-daemon-sysvinit git-doc git-email git-gui gitk gitweb
  git-cvs git-mediawiki git-svn
The following NEW packages will be installed:
  git git-man liberror-perl
0 upgraded, 3 newly installed, 0 to remove and 0 not upgraded.
Need to get 4,108 kB of archives.
After this operation, 20.9 MB of additional disk space will be used.
Do you want to continue? [Y/n] y
Get:1 http://in.archive.ubuntu.com/ubuntu jammy/main amd64 liberror-perl all 0.17029-1 [26.5 kB]
Get:2 http://in.archive.ubuntu.com/ubuntu jammy-updates/main amd64 git-man all 1:2.34.1-1ubuntu1.2 [952 kB]
Get:3 http://in.archive.ubuntu.com/ubuntu jammy-updates/main amd64 git amd64 1:2.34.1-1ubuntu1.2 [3,130 kB]
Fetched 4,108 kB in 1s (7,487 kB/s)
Selecting previously unselected package liberror-perl.
(Reading database ... 197007 files and directories currently installed.)
Preparing to unpack .../liberror-perl_0.17029-1_all.deb ...
Unpacking liberror-perl (0.17029-1) ...
Selecting previously unselected package git-man.
Preparing to unpack .../git-man_1%3a2.34.1-1ubuntu1.2_all.deb ...
Unpacking git-man (1:2.34.1-1ubuntu1.2) ...
Selecting previously unselected package git.
Preparing to unpack .../git_1%3a2.34.1-1ubuntu1.2_amd64.deb ...
Unpacking git (1:2.34.1-1ubuntu1.2) ...
Setting up liberror-perl (0.17029-1) ...
Setting up git-man (1:2.34.1-1ubuntu1.2) ...
Setting up git (1:2.34.1-1ubuntu1.2) ...
Processing triggers for man-db (2.10.2-1) ...
rahul@rahul-HP-EliteBook-840-G2:~$ git
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           [--super-prefix=<path>] [--config-env=<name>=<envvar>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone     Clone a repository into a new directory
   init      Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add       Add file contents to the index
   mv        Move or rename a file, a directory, or a symlink
   restore   Restore working tree files
   rm        Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
   branch    List, create, or delete branches
   commit    Record changes to the repository
   merge     Join two or more development histories together
   rebase    Reapply commits on top of another base tip
   reset     Reset current HEAD to the specified state
   switch    Switch branches
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch     Download objects and refs from another repository
   pull      Fetch from and integrate with another repository or a local branch
   push      Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.
rahul@rahul-HP-EliteBook-840-G2:~$ git config --global.username
error: unknown option `global.username'
usage: git config [<options>]

Config file location
    --global              use global config file
    --system              use system config file
    --local               use repository config file
    --worktree            use per-worktree config file
    -f, --file <file>     use given config file
    --blob <blob-id>      read config from given blob object

Action
    --get                 get value: name [value-pattern]
    --get-all             get all values: key [value-pattern]
    --get-regexp          get values for regexp: name-regex [value-pattern]
    --get-urlmatch        get value specific for the URL: section[.var] URL
    --replace-all         replace all matching variables: name value [value-pattern]
    --add                 add a new variable: name value
    --unset               remove a variable: name [value-pattern]
    --unset-all           remove all matches: name [value-pattern]
    --rename-section      rename section: old-name new-name
    --remove-section      remove a section: name
    -l, --list            list all
    --fixed-value         use string equality when comparing values to 'value-pattern'
    -e, --edit            open an editor
    --get-color           find the color configured: slot [default]
    --get-colorbool       find the color setting: slot [stdout-is-tty]

Type
    -t, --type <>         value is given this type
    --bool                value is "true" or "false"
    --int                 value is decimal number
    --bool-or-int         value is --bool or --int
    --bool-or-str         value is --bool or string
    --path                value is a path (file or directory name)
    --expiry-date         value is an expiry date

Other
    -z, --null            terminate values with NUL byte
    --name-only           show variable names only
    --includes            respect include directives on lookup
    --show-origin         show origin of config (file, standard input, blob, command line)
    --show-scope          show scope of config (worktree, local, global, system, command)
    --default <value>     with --get, use default value when missing entry

rahul@rahul-HP-EliteBook-840-G2:~$ git config --global user.name
rahul@rahul-HP-EliteBook-840-G2:~$ git config --global user.name "Rahul.Lour.Work"
rahul@rahul-HP-EliteBook-840-G2:~$ git config --global user.name
Rahul.Lour.Work
rahul@rahul-HP-EliteBook-840-G2:~$ git config --global user.name "Rahul.Lour.Work-repo"
rahul@rahul-HP-EliteBook-840-G2:~$ git config --global user.name
Rahul.Lour.Work-repo
rahul@rahul-HP-EliteBook-840-G2:~$ git config  user.name
Rahul.Lour.Work-repo
rahul@rahul-HP-EliteBook-840-G2:~$ git config  user.name "^C
rahul@rahul-HP-EliteBook-840-G2:~$ git config  user.name "Rahul.Lour.Work-local"
fatal: not in a git directory
rahul@rahul-HP-EliteBook-840-G2:~$ git remote set-url
fatal: not a git repository (or any of the parent directories): .git
rahul@rahul-HP-EliteBook-840-G2:~$ git remote set-url "^[[200~https://github.com/rahullourwork/HTML.git~"
fatal: not a git repository (or any of the parent directories): .git
rahul@rahul-HP-EliteBook-840-G2:~$ git remote set-url "^[[200~https://github.com/rahullourwork/HTML.git"
fatal: not a git repository (or any of the parent directories): .git
rahul@rahul-HP-EliteBook-840-G2:~$ git remote set-url "https://github.com/rahullourwork/HTML.git"
fatal: not a git repository (or any of the parent directories): .git
rahul@rahul-HP-EliteBook-840-G2:~$ git remote set-url "https://github.com/rahullourwork/HTML.git"
fatal: not a git repository (or any of the parent directories): .git
rahul@rahul-HP-EliteBook-840-G2:~$ git remote add origin "https://github.com/rahullourwork/HTML.git"
fatal: not a git repository (or any of the parent directories): .git
rahul@rahul-HP-EliteBook-840-G2:~$ git remote add origin https://github.com/rahullourwork/HTML.git
fatal: not a git repository (or any of the parent directories): .git
rahul@rahul-HP-EliteBook-840-G2:~$ git remote add origin https://github.com/rahullourwork.git
fatal: not a git repository (or any of the parent directories): .git
rahul@rahul-HP-EliteBook-840-G2:~$ git remote add origin https://github.com/rahullourwork/HTML.git
fatal: not a git repository (or any of the parent directories): .git
rahul@rahul-HP-EliteBook-840-G2:~$ git remote add origin https://github.com/rahullourwork/HTML
fatal: not a git repository (or any of the parent directories): .git
rahul@rahul-HP-EliteBook-840-G2:~$ ls
Desktop  Documents  Downloads  Music  Pictures  Public  snap  Templates  Videos
rahul@rahul-HP-EliteBook-840-G2:~$ cd Desktop/HTML
bash: cd: Desktop/HTML: No such file or directory
rahul@rahul-HP-EliteBook-840-G2:~$ cd Desktop\HTML
bash: cd: DesktopHTML: No such file or directory
rahul@rahul-HP-EliteBook-840-G2:~$ cd Desktop
rahul@rahul-HP-EliteBook-840-G2:~/Desktop$ ls
'Git Repo'
rahul@rahul-HP-EliteBook-840-G2:~/Desktop$ cd Git Repo
bash: cd: too many arguments
rahul@rahul-HP-EliteBook-840-G2:~/Desktop$ cd "Git Repo"
rahul@rahul-HP-EliteBook-840-G2:~/Desktop/Git Repo$ ls
html
rahul@rahul-HP-EliteBook-840-G2:~/Desktop/Git Repo$ cd html
rahul@rahul-HP-EliteBook-840-G2:~/Desktop/Git Repo/html$ cd..
cd..: command not found
rahul@rahul-HP-EliteBook-840-G2:~/Desktop/Git Repo/html$ cd.
Command 'cd.' not found, did you mean:
  command 'cdi' from deb cdo (2.0.4-1)
  command 'cdb' from deb tinycdb (0.78build3)
  command 'cdw' from deb cdw (0.8.1-2)
  command 'cde' from deb cde (0.1+git9-g551e54d-1.2)
  command 'cdp' from deb irpas (0.10-9)
  command 'cd5' from deb cd5 (0.1-4)
  command 'cdo' from deb cdo (2.0.4-1)
Try: sudo apt install <deb name>
rahul@rahul-HP-EliteBook-840-G2:~/Desktop/Git Repo/html$ cd ..
rahul@rahul-HP-EliteBook-840-G2:~/Desktop/Git Repo$ git init
hint: Using 'master' as the name for the initial branch. This default branch name
hint: is subject to change. To configure the initial branch name to use in all
hint: of your new repositories, which will suppress this warning, call:
hint: 
hint: 	git config --global init.defaultBranch <name>
hint: 
hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
hint: 'development'. The just-created branch can be renamed via this command:
hint: 
hint: 	git branch -m <name>
Initialized empty Git repository in /home/rahul/Desktop/Git Repo/.git/
rahul@rahul-HP-EliteBook-840-G2:~/Desktop/Git Repo$ git remote add origin "https://github.com/rahullourwork/HTML.git"
rahul@rahul-HP-EliteBook-840-G2:~/Desktop/Git Repo$ git remote -v
origin	https://github.com/rahullourwork/HTML.git (fetch)
origin	https://github.com/rahullourwork/HTML.git (push)
rahul@rahul-HP-EliteBook-840-G2:~/Desktop/Git Repo$ git fetch origin master
fatal: couldn't find remote ref master
rahul@rahul-HP-EliteBook-840-G2:~/Desktop/Git Repo$ git fetch origin
remote: Enumerating objects: 32, done.
remote: Counting objects: 100% (32/32), done.
remote: Compressing objects: 100% (24/24), done.
remote: Total 32 (delta 0), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (32/32), 26.20 KiB | 1.54 MiB/s, done.
From https://github.com/rahullourwork/HTML
 * [new branch]      main       -> origin/main
 * [new branch]      sub        -> origin/sub
rahul@rahul-HP-EliteBook-840-G2:~/Desktop/Git Repo$ git user.name "master"
git: 'user.name' is not a git command. See 'git --help'.
rahul@rahul-HP-EliteBook-840-G2:~/Desktop/Git Repo$ git config user.name "master"
rahul@rahul-HP-EliteBook-840-G2:~/Desktop/Git Repo$ git config -- global user.name "master"
error: key does not contain a section: global
rahul@rahul-HP-EliteBook-840-G2:~/Desktop/Git Repo$ git config --global user.name "origin"
rahul@rahul-HP-EliteBook-840-G2:~/Desktop/Git Repo$ git config --global user.email "rahul.lour@w3villa.com"
rahul@rahul-HP-EliteBook-840-G2:~/Desktop/Git Repo$ git pull
There is no tracking information for the current branch.
Please specify which branch you want to merge with.
See git-pull(1) for details.

    git pull <remote> <branch>

If you wish to set tracking information for this branch you can do so with:

    git branch --set-upstream-to=origin/<branch> master

rahul@rahul-HP-EliteBook-840-G2:~/Desktop/Git Repo$ git pull origin master
fatal: couldn't find remote ref master
rahul@rahul-HP-EliteBook-840-G2:~/Desktop/Git Repo$ branch
Command 'branch' not found, but can be installed with:
sudo apt install rheolef
rahul@rahul-HP-EliteBook-840-G2:~/Desktop/Git Repo$ git branch
rahul@rahul-HP-EliteBook-840-G2:~/Desktop/Git Repo$ git branch -d
fatal: branch name required
rahul@rahul-HP-EliteBook-840-G2:~/Desktop/Git Repo$ git branch -r
  origin/main
  origin/sub
rahul@rahul-HP-EliteBook-840-G2:~/Desktop/Git Repo$ git branch
rahul@rahul-HP-EliteBook-840-G2:~/Desktop/Git Repo$ git pull origin 
You asked to pull from the remote 'origin', but did not specify
a branch. Because this is not the default configured remote
for your current branch, you must specify a branch on the command line.
rahul@rahul-HP-EliteBook-840-G2:~/Desktop/Git Repo$ git checkout -b main
Switched to a new branch 'main'
rahul@rahul-HP-EliteBook-840-G2:~/Desktop/Git Repo$ git branch -a
  remotes/origin/main
  remotes/origin/sub
rahul@rahul-HP-EliteBook-840-G2:~/Desktop/Git Repo$ git branch 
rahul@rahul-HP-EliteBook-840-G2:~/Desktop/Git Repo$ git checkout main
Branch 'main' set up to track remote branch 'main' from 'origin'.
Already on 'main'
rahul@rahul-HP-EliteBook-840-G2:~/Desktop/Git Repo$ git pull origin main
From https://github.com/rahullourwork/HTML
 * branch            main       -> FETCH_HEAD
Already up to date.
rahul@rahul-HP-EliteBook-840-G2:~/Desktop/Git Repo$ git pull
Already up to date.
rahul@rahul-HP-EliteBook-840-G2:~/Desktop/Git Repo$ git remote -v
origin	https://github.com/rahullourwork/HTML.git (fetch)
origin	https://github.com/rahullourwork/HTML.git (push)
rahul@rahul-HP-EliteBook-840-G2:~/Desktop/Git Repo$ gh auth logn
Command 'gh' not found, but can be installed with:
sudo snap install gh       # version 2.6.0-15-g1a10fd5a, or
sudo apt  install gh       # version 2.4.0+dfsg1-2
sudo apt  install gitsome  # version 0.8.0+ds-6ubuntu1
See 'snap info gh' for additional versions.
rahul@rahul-HP-EliteBook-840-G2:~/Desktop/Git Repo$ gh auth login
Command 'gh' not found, but can be installed with:
sudo snap install gh       # version 2.6.0-15-g1a10fd5a, or
sudo apt  install gh       # version 2.4.0+dfsg1-2
sudo apt  install gitsome  # version 0.8.0+ds-6ubuntu1
See 'snap info gh' for additional versions.
rahul@rahul-HP-EliteBook-840-G2:~/Desktop/Git Repo$ git gh auth login
git: 'gh' is not a git command. See 'git --help'.

The most similar command is
	gc
rahul@rahul-HP-EliteBook-840-G2:~/Desktop/Git Repo$ brew install gh
Command 'brew' not found, did you mean:
  command 'brec' from deb bplay (0.991-10build1)
  command 'qbrew' from deb qbrew (0.4.1-8build1)
Try: sudo apt install <deb name>
rahul@rahul-HP-EliteBook-840-G2:~/Desktop/Git Repo$ sudo apt -install brew
[sudo] password for rahul: 
E: Command line option 'i' [from -install] is not understood in combination with the other options.
rahul@rahul-HP-EliteBook-840-G2:~/Desktop/Git Repo$ sudo apt install brew
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
E: Unable to locate package brew
rahul@rahul-HP-EliteBook-840-G2:~/Desktop/Git Repo$ brew install gh
Command 'brew' not found, did you mean:
  command 'qbrew' from deb qbrew (0.4.1-8build1)
  command 'brec' from deb bplay (0.991-10build1)
Try: sudo apt install <deb name>
rahul@rahul-HP-EliteBook-840-G2:~/Desktop/Git Repo$ gvh
Command 'gvh' not found, did you mean:
  command 'gvm' from snap gvm (1.1.0)
  command 'gh' from snap gh (2.6.0-15-g1a10fd5a)
  command 'gv' from deb gv (1:3.7.4-2)
  command 'gh' from deb gh (2.4.0+dfsg1-2)
  command 'gh' from deb gitsome (0.8.0+ds-6ubuntu1)
  command 'gvb' from deb gvb (1.4-1.1)
  command 'gth' from deb genomethreader (1.7.3+dfsg-6)
See 'snap info <snapname>' for additional versions.
rahul@rahul-HP-EliteBook-840-G2:~/Desktop/Git Repo$ gh
Work seamlessly with GitHub from the command line.

USAGE
  gh <command> <subcommand> [flags]

CORE COMMANDS
  auth:        Authenticate gh and git with GitHub
  browse:      Open the repository in the browser
  codespace:   Connect to and manage your codespaces
  gist:        Manage gists
  issue:       Manage issues
  pr:          Manage pull requests
  release:     Manage releases
  repo:        Manage repositories

ACTIONS COMMANDS
  run:         View details about workflow runs
  workflow:    View details about GitHub Actions workflows

ADDITIONAL COMMANDS
  alias:       Create command shortcuts
  api:         Make an authenticated GitHub API request
  completion:  Generate shell completion scripts
  config:      Manage configuration for gh
  extension:   Manage gh extensions
  gpg-key:     Manage GPG keys
  help:        Help about any command
  label:       Manage labels
  search:      Search for repositories, issues, and pull requests
  secret:      Manage GitHub secrets
  ssh-key:     Manage SSH keys
  status:      Print information about relevant issues, pull requests, and notifications across repositories

HELP TOPICS
  actions:     Learn about working with GitHub Actions
  environment: Environment variables that can be used with gh
  formatting:  Formatting options for JSON data exported from gh
  mintty:      Information about using gh with MinTTY
  reference:   A comprehensive reference of all gh commands

FLAGS
  --help      Show help for command
  --version   Show gh version

EXAMPLES
  $ gh issue create
  $ gh repo clone cli/cli
  $ gh pr checkout 321

LEARN MORE
  Use 'gh <command> <subcommand> --help' for more information about a command.
  Read the manual at https://cli.github.com/manual

FEEDBACK
  Open an issue using 'gh issue create -R github.com/cli/cli'

rahul@rahul-HP-EliteBook-840-G2:~/Desktop/Git Repo$ gh auth login
? What account do you want to log into? GitHub.com
? What is your preferred protocol for Git operations? HTTPS
? Authenticate Git with your GitHub credentials? Yes
? How would you like to authenticate GitHub CLI? Login with a web browser

! First copy your one-time code: E3ED-7B35
Press Enter to open github.com in your browser... 
Opening in existing browser session.
libva error: vaGetDriverNameByIndex() failed with unknown libva error, driver_name = (null)
✓ Authentication complete.
- gh config set -h github.com git_protocol https
✓ Configured git protocol
✓ Logged in as rahullourwork
rahul@rahul-HP-EliteBook-840-G2:~/Desktop/Git Repo$ git ls
git: 'ls' is not a git command. See 'git --help'.

The most similar command is
	log
rahul@rahul-HP-EliteBook-840-G2:~/Desktop/Git Repo$ git branch
* main
rahul@rahul-HP-EliteBook-840-G2:~/Desktop/Git Repo$ 

